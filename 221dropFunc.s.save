	.arch armv6
	.eabi_attribute 27, 3
	.eabi_attribute 28, 1
	.fpu vfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 6
	.eabi_attribute 18, 4
	.file	"221dropFunc.c"
	.section	.rodata
	.align	2
.LC0:
	.ascii	"%d\012\000"
	.text
	.align	2
	.global	pieceDrop
	.type	pieceDrop, %function
pieceDrop:
	@ args = 4, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	stmfd	sp!, {fp, lr	add	fp, sp, #4
	sub	sp, sp, #24
	str	r0, [fp, #-16]
	str	r1, [fp, #-20] 
	str	r2, [fp, #-24] 
	str	r3, [fp, #-28] ///r3 = fp-28  or r3 = stopFlag 
	mov	r3, #0         ///move 0 into r3  or  stopFlag = 0
	str	r3, [fp, #-8]  ///Store stopFlag at fp-8
	ldr	r3, [fp, #-28] ///Load 
	sub	r3, r3, #1
	str	r3, [fp, #-12]
	ldr	r3, .L10
	mov	r0, r3
	ldr	r1, [fp, #-12]
	bl	printf
	b	.L2
.L9:
	ldr	r2, [fp, #-12]
	ldr	r3, [fp, #-24]
	add	r2, r2, r3
	ldr	r3, [fp, #-20]
	ldr	r1, [fp, #-24]
	mul	r3, r1, r3
	cmp	r2, r3
	blt	.L3
	ldr	r3, [fp, #4]
	and	r3, r3, #1
	cmp	r3, #0
	bne	.L4
	ldr	r3, [fp, #-12]
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	mov	r2, #2
	str	r2, [r3, #0]
	mov	r3, #1
	str	r3, [fp, #-8]
	b	.L2
.L4:
	ldr	r3, [fp, #-12]
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	mov	r2, #1
	str	r2, [r3, #0]
	mov	r3, #1
	str	r3, [fp, #-8]
	b	.L2
.L3:
	ldr	r2, [fp, #-12]
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	.L5
	ldr	r3, [fp, #-12]
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	ldr	r3, [r3, #0]
	cmp	r3, #0
	beq	.L6
	mvn	r3, #0
	b	.L7
.L6:
	ldr	r3, [fp, #4]
	and	r3, r3, #1
	cmp	r3, #0
	bne	.L8
	ldr	r3, [fp, #-12]
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	mov	r2, #2
	str	r2, [r3, #0]
	mov	r3, #1
	str	r3, [fp, #-8]
	b	.L2
.L8:
	ldr	r3, [fp, #-12]
	mov	r3, r3, asl #2
	ldr	r2, [fp, #-16]
	add	r3, r2, r3
	mov	r2, #1
	str	r2, [r3, #0]
	mov	r3, #1
	str	r3, [fp, #-8]
	b	.L2
.L5:
	ldr	r2, [fp, #-12]
	ldr	r3, [fp, #-24]
	add	r3, r2, r3
	str	r3, [fp, #-12]
.L2:
	ldr	r3, [fp, #-8]
	cmp	r3, #0
	beq	.L9
	ldr	r3, .L10
	mov	r0, r3
	ldr	r1, [fp, #-12]
	bl	printf
	ldr	r3, [fp, #-12]
.L7:
	mov	r0, r3
	sub	sp, fp, #4
	ldmfd	sp!, {fp, pc}
.L11:
	.align	2
.L10:
	.word	.LC0
	.size	pieceDrop, .-pieceDrop
	.ident	"GCC: (Debian 4.6.3-14+rpi1) 4.6.3"
	.section	.note.GNU-stack,"",%progbits
